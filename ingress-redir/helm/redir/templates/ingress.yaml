{{- range .Values.ingress.hosts }}
{{- $domain := contains "://" .host.redir | ternary .host.redir (print $.Values.ingress.defaultRedirect .host.redir) }}
{{- $addwww := default "true" (.host.www | quote) }}
{{- $secret := join "" (.host.names | sortAlpha) | sha1sum }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .host.name }}
  annotations:
    {{- if .host.tls }}
    cert-manager.io/cluster-issuer: {{ default "letsencrypt-staging" $.Values.ingress.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/permanent-redirect: {{ $domain }}

spec:
  ingressClassName: {{ default "nginx" $.Values.ingress.ingressClassName }}
  rules:
    {{- $name := .host.name -}}
    {{- $path := default "/" .host.path -}}

    {{- range $index, $host := .host.names }}
      {{- $host = eq $addwww "true" | ternary (print "www." $host) $host | quote }}
      {{- if eq $index 0 }}
      - host: {{ $host }}
        http: &{{ $name }}
          paths:
            - path: {{ $path }}
              pathType: Prefix
              backend: &backend
                service:
                  name: {{ $.Values.ingress.backend.name }}
                  port:
                    number: {{ $.Values.ingress.backend.port }}

      {{- else }}
      - host: {{ $host }}
        http: *{{ $name }}
        
      {{- end }}
    {{- end }}


  {{- if .host.tls }}
  tls:
  - secretName: tls-{{- $secret }}
    hosts:
      {{- range .host.names }}
      - {{ . }}
      {{- if eq $addwww "true" }}
      - {{ print "www." . }}
      {{- end }}
      {{- end -}}
  {{- end }}  
---
{{- end }}
